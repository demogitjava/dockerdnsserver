JDNSS is a small DNS server written in Java.  It was written to be both
more portable and more secure due to its implementation in Java.  It is
currently intended for use as a "leaf" server as it does not do iterative
or recursive lookups for clients.  It reads master files (as outlined in
RFC1035 http://www.faqs.org/rfcs/rfc1035.html) listed on the command line.
There are also two flags:
	-p #	- listen to UDP and TCP at port # instead of 53
	-t #	- the maximum number of threads to allow (default: 10)
	-v	- display the JDNSS version number

If you downloaded the source, cd to the src directory, do "javac *.java" to
build JDNSS.  You can then run it via "java JDNSS zone1 zone2" if zone1 and
zone2 are two zone files you want to serve.  You can also run the "Package"
script to build a jar file in the bin directory and the run the server via
"java -jar bin/JDNSS.jar zone1 zone2".  If you use the '@' in the zone file
for the domain, the filename will be used for the domain name.

For testing purposes you can run the server on a different port:
	java JDNSS -p 5353 test.com trunc.org
	java -jar JDNSS.jar -p 5353 test.com trunc.org
and run one of the scripts:
	digtest.bat -- uses dig,
	nsltest.bat -- uses nslookup, should work in UNIX and Windows.

Todo:
	Thread management
	Iterative and/or recursive lookups
	Zone transfers
	Complete the multicast implementation
	Parsing of bind configuration files
