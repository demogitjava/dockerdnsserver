head	1.1;
access;
symbols;
locks
	beaty:1.1; strict;
comment	@# @;


1.1
date	2004.12.09.17.22.14;	author beaty;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -W

use Time::HiRes qw ( gettimeofday );
use IO::Socket;
use IO::Select;
use Getopt::Std;
use vars qw/ %opt /;

$opt{p}=53;
$opt{s}=9953;
$opt{t}=3;

my $progname="checkrecurse.pl";
getopts('p:s:t:',\%opt);
unless ($#ARGV==0) {usage();exit(1);}

my $s=IO::Socket::INET->new(LocalPort=>$opt{s},Proto=>"udp") or die "no sockets\n";
my $a=sockaddr_in($opt{p},inet_aton($ARGV[0]));

my $now=gettimeofday+$opt{t};
my $sel=IO::Select->new($s);

#Send a DNS message of 0x04test0xc0 to the server

$s->send(pack("H44","0011010000010000000000000474657374c000010001"),0,$a);

###Test case###

#Normal DNS query for test.domain.com
	#$s->send(pack("H66","001201000001000000000000047465737406646f6d61696e03636f6d0000010001"),0,$a);

###End###

while($now>gettimeofday) 
{  
	if ($sel->can_read(0))
	{
		$s->recv($r,512);
		printf "%d %s\n",unpack("nh200",$r) if ($s->peerport==53); 
  	}
}

sub usage
{
    print STDERR <<EOF;
Usage: $progname [-p port] [-s srcport] [-t timeout] server
Where: server is an ip address 
       or '-' to read list of servers from stdin
       -p port    (nameserver is on this port) [$opt{p}]
       -s srcport (set the source port) [$opt{s}]
       -t time    (set query timeout) [$opt{t}]
EOF
        exit 2;                                                        
}@
